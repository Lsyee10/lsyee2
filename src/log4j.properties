###########################################################################
##config root logger
###########################################################################
##set log level(include five levels),and output destination(console,file)

#log4j.rootLogger=OFF,console,file
#log4j.rootLogger=FATAL,console,file
#log4j.rootLogger=ERROR,console,file
log4j.rootLogger=WARN,console,file
#log4j.rootLogger=INFO,console,file
#log4j.rootLogger=DEBUG,console,file
#log4j.rootLogger=ALL,console,file

###########################################################################
##config the destination of log output
###########################################################################
##one way can output to console :
##org.apache.log4j.ConsoleAppender (console)
##three ways can output to file :
##org.apache.log4j.FileAppender (only one file,appoint the file name)
##org.apache.log4j.DailyRollingFileAppender (every day has a file,named by date)
##org.apache.log4j.RollingFileAppender (generates a new file while reaching appointed size)
##one way can output logs to any appointed place with stream format :
##org.apache.log4j.WriterAppender (any appointed place with stream format)

##Standard ConsoleAppender
log4j.appender.console=org.apache.log4j.ConsoleAppender

##Standard RollingFileAppender
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=log/logging.log
#log4j.appender.file.MaxFileSize=5KB
#log4j.appender.file.MaxBackupIndex=1000

##Standard DailyRollingFileAppender
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.File=../webapps/ppm_nbm_dirnet/logs/log
#log4j.appender.file.File=logs/log
log4j.appender.file.File=${catalina.home}/me-webapps/lsyee/logs/log
#log4j.appender.file.File=f:\\webapps\\advt2\\logs\\log
#log4j.appender.file.File=${catalina.base}/webapps/ppm_nbm_dirnet/logs/log
log4j.appender.file.DatePattern='.'yyyyMMdd
log4j.appender.file.Append=true

###########################################################################
##config the format(layout) of log information,totally has four types
###########################################################################
##html tables format of layout as follows :
##org.apache.log4j.HTMLLayout
##a flexible pattern,can appointed custom layout:
##org.apache.log4j.PatternLayout
##-------------------------------------------------------------------------
##while layout set to PatternLayout,the format of ConversionPattern is as follows :
##	%d : current date and time,can set custom format
##	%r : how much time is spent after program runs
##	%t : the thread used to save log
##	%p : the priority of log statement
##	%r : class name related to the request of log
##	%c : class name of the log messages
##	%m : the content of log message
##	%n : add newline
##	%l : the position of event occured,includes class name,thread and lines
##		 for example : SystemLog.main(SystemLog.java:60)
##-------------------------------------------------------------------------
##include log level and content :
##org.apache.log4j.SimpleLayout
##include log time,thread,type and so on :
##org.apache.log4j.TTCCLayout
#log4j.appender.console.layout=org.apache.log4j.SimpleLayout
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss,SSS}] %p %c %t- %m%n
#log4j.appender.console.layout=org.apache.log4j.TTCCLayout
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout=org.apache.log4j.TTCCLayout
#log4j.appender.file.layout.ConversionPattern=%t %p- %m%n
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH\:mm\:ss,SSS}] %p %c %t- %m%n

log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

log4j.logger.com.ibatis=debug
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.PreparedStatement=debug